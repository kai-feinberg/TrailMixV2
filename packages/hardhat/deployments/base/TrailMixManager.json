{
  "address": "0xfbF89eEbcB12677EC02172Ed0e4328227B9f3A83",
  "abi": [
    {
      "inputs": [],
      "name": "NotContractOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ContractDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "FundsDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "SwapExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ThresholdUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeStrategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "canExec",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "execPayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_trailAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "internalType": "uint24",
          "name": "_poolFee",
          "type": "uint24"
        }
      ],
      "name": "deployTrailMix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tslThreshold",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isActiveStrategy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "sell",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "updateThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "toggleSlippageProtection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xef3a7e39b2140df8df898cf596028c5db90fd4fb76e76446b432ef923a4ac85b",
  "receipt": {
    "to": null,
    "from": "0x2cb509BE01144aF14FCF944957c401C14c6dF722",
    "contractAddress": "0xfbF89eEbcB12677EC02172Ed0e4328227B9f3A83",
    "transactionIndex": 42,
    "gasUsed": "2271835",
    "logsBloom": "0x
    "blockHash": "0x4904268f79015309680a6d49ebb3de3a5b510f7289047354efabcae8365aab98",
    "transactionHash": "0xef3a7e39b2140df8df898cf596028c5db90fd4fb76e76446b432ef923a4ac85b",
    "logs": [],
    "blockNumber": 15622909,
    "cumulativeGasUsed": "9349706",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "903e237bc136ac310ed3308ee41b060f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotContractOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContractDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeStrategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canExec\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"execPayload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_trailAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_granularity\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"_poolFee\",\"type\":\"uint24\"}],\"name\":\"deployTrailMix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tslThreshold\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isActiveStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"sell\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"updateThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"toggleSlippageProtection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checker()\":{\"details\":\"Part of the Gelato automation\",\"returns\":{\"canExec\":\"Boolean flag indicating if upkeep is needed.\",\"execPayload\":\"Encoded data on what action to perform during upkeep.\"}},\"performUpkeep(address,bool,bool,uint256)\":{\"details\":\"Part of the gelato automation.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checker()\":{\"notice\":\"Checks if upkeep is needed based on TSL conditions.COMPUTED OFF-CHAIN\"},\"performUpkeep(address,bool,bool,uint256)\":{\"notice\":\"Performs the upkeep of updating the stop loss threshold or triggering a sell.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrailMixManager.sol\":\"TrailMixManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/ITrailMix.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\n\\r\\ninterface ITrailMix {\\r\\n\\t// Function signatures\\r\\n\\tfunction deposit(uint256 amount, uint256 tslThreshold) external;\\r\\n\\r\\n\\tfunction withdraw(address token) external;\\r\\n\\r\\n\\tfunction checkUpkeepNeeded() external view returns (bool, bool, uint256);\\r\\n\\r\\n\\tfunction updateTSLThreshold(uint256 newThreshold) external;\\r\\n\\r\\n\\tfunction swapOnUniswap(uint256 amount) external;\\r\\n\\r\\n\\tfunction getTwapPrice() external view returns (uint256);\\r\\n\\r\\n\\tfunction getExactPrice() external view returns (uint256);\\r\\n\\r\\n\\tfunction toggleSlippageProtection() external;\\r\\n\\r\\n\\tfunction getERC20Balance() external view returns (uint256);\\r\\n\\r\\n\\tfunction getStablecoinBalance() external view returns (uint256);\\r\\n\\r\\n\\tfunction getTSLThreshold() external view returns (uint256);\\r\\n\\r\\n\\tfunction isTSLActive() external view returns (bool);\\r\\n\\r\\n\\tfunction getERC20TokenAddress() external view returns (address);\\r\\n\\r\\n\\tfunction getStablecoinAddress() external view returns (address);\\r\\n\\r\\n\\tfunction getUniswapRouterAddress() external view returns (address);\\r\\n\\r\\n\\tfunction getTrailAmount() external view returns (uint256);\\r\\n\\r\\n\\tfunction getManager() external view returns (address);\\r\\n\\r\\n\\tfunction getCreator() external view returns (address);\\r\\n\\r\\n\\tfunction getGranularity() external view returns (uint256);\\r\\n\\r\\n\\tfunction getUniswapPool() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0xfc2aec01fb3439478c66ce425f75ef8ce197edb735e5dc6c91c50284007b0711\",\"license\":\"MIT\"},\"contracts/IUniswapOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\n\\r\\ninterface IUniswapOracle {\\r\\n    function estimateAmountOut(\\r\\n        address pool,\\r\\n        address tokenIn,\\r\\n        uint128 amountIn,\\r\\n        uint32 secondsAgo\\r\\n    ) external view returns (uint amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x5017001026dd46165966a19ca1f9fa3e2d3c9380dcaef6a967b64405600a32cb\",\"license\":\"MIT\"},\"contracts/TrailMix.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\r\\nimport { ISwapRouter } from \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\r\\n// import {ReentrancyGuard} from \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport { ReentrancyGuard } from \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport { IUniswapOracle } from \\\"./IUniswapOracle.sol\\\";\\r\\n\\r\\nerror InvalidAmount(); // Error for when the deposit amount is not positive\\r\\nerror TransferFailed(); // Error for when the token transfer fails\\r\\nerror InvalidToken(); // Error for when the token address is invalid\\r\\n\\r\\ncontract TrailMix is ReentrancyGuard {\\r\\n\\taddress private immutable i_manager; //address of the manager contract\\r\\n\\taddress private immutable i_creator; // address of the creator of the contract\\r\\n\\r\\n\\taddress private s_erc20Token;\\r\\n\\taddress private s_stablecoin;\\r\\n\\r\\n\\tISwapRouter private s_uniswapRouter;\\r\\n\\taddress public immutable s_uniswapPool;\\r\\n\\tIUniswapOracle private s_uniswapOracle; // TWAP oracle for Uniswap V3\\r\\n\\r\\n\\tuint256 private immutable s_trailAmount; // Amount to trail by as a %\\r\\n\\tuint256 private s_tslThreshold; // User's TSL threshold\\r\\n\\tuint256 private s_erc20Balance;\\r\\n\\tuint256 private s_stablecoinBalance; // User's ERC20 token balance\\r\\n\\tuint256 private s_granularity; //  % price increase to trigger an update\\r\\n\\tbool private s_isTSLActive; // Indicates if the TSL is currently active\\r\\n\\tbool private slippageProtection; // Indicates if slippage protection is enabled\\r\\n\\tuint24 private s_poolFee;\\r\\n\\r\\n\\t//events are emitted in the manager contract\\r\\n\\r\\n\\tconstructor(\\r\\n\\t\\taddress _manager,\\r\\n\\t\\taddress _creator,\\r\\n\\t\\taddress _erc20Token,\\r\\n\\t\\taddress _stablecoin,\\r\\n\\t\\taddress _uniswapRouter,\\r\\n\\t\\taddress _uniswapPool,\\r\\n\\t\\taddress _uniswapOracle,\\r\\n\\t\\tuint256 _trailAmount,\\r\\n\\t\\tuint256 granularity,\\r\\n\\t\\tuint24 _poolFee\\r\\n\\t) {\\r\\n\\t\\ti_manager = _manager;\\r\\n\\t\\ti_creator = _creator;\\r\\n\\r\\n\\t\\ts_erc20Token = _erc20Token;\\r\\n\\t\\ts_stablecoin = _stablecoin;\\r\\n\\r\\n\\t\\ts_uniswapRouter = ISwapRouter(_uniswapRouter);\\r\\n\\t\\ts_uniswapOracle = IUniswapOracle(_uniswapOracle);\\r\\n\\t\\ts_uniswapPool = _uniswapPool;\\r\\n\\r\\n\\t\\ts_isTSLActive = false;\\r\\n\\t\\ts_trailAmount = _trailAmount;\\r\\n\\t\\tslippageProtection = true;\\r\\n\\t\\ts_granularity = granularity;\\r\\n\\t\\ts_poolFee = _poolFee;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyManager() {\\r\\n\\t\\trequire(msg.sender == i_manager, \\\"only callable by manager contract\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Deposits a specified amount of the ERC20 token into the contract.\\r\\n\\t * @param amount The amount of the ERC20 token to deposit.\\r\\n\\t * @param tslThreshold The initial trailing stop loss threshold as a percentage.\\r\\n\\t */\\r\\n\\tfunction deposit(\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\tuint256 tslThreshold\\r\\n\\t) external onlyManager {\\r\\n\\t\\tif (amount <= 0) {\\r\\n\\t\\t\\trevert InvalidAmount();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tbool transferSuccess = IERC20(s_erc20Token).transferFrom(\\r\\n\\t\\t\\ti_manager,\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tamount\\r\\n\\t\\t);\\r\\n\\t\\tif (!transferSuccess) {\\r\\n\\t\\t\\trevert TransferFailed();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\ts_erc20Balance += amount;\\r\\n\\r\\n\\t\\tif (!s_isTSLActive) {\\r\\n\\t\\t\\t// If TSL is not active, set the threshold and activate TSL\\r\\n\\t\\t\\ts_tslThreshold = (tslThreshold * (100 - s_trailAmount)) / 100;\\r\\n\\t\\t\\ts_isTSLActive = true;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Withdraws the user's funds from the contract.\\r\\n\\t * @dev Allows withdrawal of either ERC20 tokens or stablecoins, based on TSL status.\\r\\n\\t */\\r\\n\\tfunction withdraw(address token) external onlyManager {\\r\\n\\t\\tuint256 withdrawalAmount;\\r\\n\\r\\n\\t\\tif (token == s_stablecoin) {\\r\\n\\t\\t\\t// If TSL is not active, assume user wants to withdraw stablecoins\\r\\n\\t\\t\\t// Logic to handle stablecoin withdrawal\\r\\n\\t\\t\\twithdrawalAmount = s_stablecoinBalance;\\r\\n\\t\\t\\tif (withdrawalAmount <= 0) {\\r\\n\\t\\t\\t\\trevert InvalidAmount();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\ts_stablecoinBalance = 0;\\r\\n\\t\\t\\tTransferHelper.safeTransfer(\\r\\n\\t\\t\\t\\ts_stablecoin,\\r\\n\\t\\t\\t\\ti_creator, // sends funds to the contract creator\\r\\n\\t\\t\\t\\twithdrawalAmount\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\ts_isTSLActive = false; // Deactivate TSL when withdrawal is made\\r\\n\\t\\t} else if (token == s_erc20Token) {\\r\\n\\t\\t\\t// If TSL is active, user withdraws their ERC20 tokens\\r\\n\\t\\t\\twithdrawalAmount = s_erc20Balance;\\r\\n\\t\\t\\tif (withdrawalAmount <= 0) {\\r\\n\\t\\t\\t\\trevert InvalidAmount();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\ts_erc20Balance = 0;\\r\\n\\t\\t\\tTransferHelper.safeTransfer(\\r\\n\\t\\t\\t\\ts_erc20Token,\\r\\n\\t\\t\\t\\ti_creator,\\r\\n\\t\\t\\t\\twithdrawalAmount\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\ts_isTSLActive = false; // Deactivate TSL when withdrawal is made\\r\\n\\t\\t} else {\\r\\n\\t\\t\\trevert InvalidToken();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Checks if upkeep is needed based on TSL conditions.\\r\\n\\t * @return A tuple of three values: a boolean indicating if selling is needed, a boolean indicating if the threshold should be updated, and the new threshold value.\\r\\n\\t */\\r\\n\\tfunction checkUpkeepNeeded() external view returns (bool, bool, uint256) {\\r\\n\\t\\t// Implement logic to check if TSL conditions are met\\r\\n\\t\\tuint256 currentPrice = getTwapPrice();\\r\\n\\t\\tuint256 exactPrice = getExactPrice();\\r\\n\\r\\n\\t\\tbool triggerSell = false;\\r\\n\\t\\tbool updateThreshold = false;\\r\\n\\t\\tuint256 newThreshold = 0;\\r\\n\\r\\n\\t\\t// Calculate 10% price range bounds\\r\\n\\t\\tuint256 lowerBound = (currentPrice * 90) / 100;\\r\\n\\t\\tuint256 upperBound = (currentPrice * 110) / 100;\\r\\n\\t\\t//calculates the old all time high price based on the threshold\\r\\n\\t\\tuint256 oldCurrentPrice = (s_tslThreshold * 100) /\\r\\n\\t\\t\\t(100 - s_trailAmount);\\r\\n\\r\\n\\t\\t//determines the price that is granularity% higher than the old stored price\\r\\n\\t\\tuint256 minPriceForUpdate = (oldCurrentPrice * (100 + s_granularity)) /\\r\\n\\t\\t\\t100;\\r\\n\\t\\t//if new price is less than the current threshold then trigger TSL\\r\\n\\t\\tif (exactPrice >= lowerBound && exactPrice <= upperBound) {\\r\\n\\t\\t\\tif (currentPrice < s_tslThreshold) {\\r\\n\\t\\t\\t\\t//trigger TSL\\r\\n\\t\\t\\t\\ttriggerSell = true;\\r\\n\\t\\t\\t} else if (currentPrice > minPriceForUpdate) {\\r\\n\\t\\t\\t\\tupdateThreshold = true;\\r\\n\\t\\t\\t\\tnewThreshold = (currentPrice * (100 - s_trailAmount)) / 100;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn (triggerSell, updateThreshold, newThreshold);\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Updates the trailing stop loss threshold.\\r\\n\\t * @dev This function is private and should be called only by performUpkeep.\\r\\n\\t * @param newThreshold The new threshold value to set.\\r\\n\\t */\\r\\n\\tfunction updateTSLThreshold(uint256 newThreshold) external onlyManager {\\r\\n\\t\\ts_tslThreshold = newThreshold;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Gets the latest price of the ERC20 token in stablecoins.\\r\\n\\t * @dev Uses the Uniswap Oracle to get the latest price using TWAP (time-weighted average price) data for the past 5 minutes\\r\\n\\t * @return The latest price of the ERC20 token in stablecoins.\\r\\n\\t */\\r\\n\\tfunction getTwapPrice() public view returns (uint256) {\\r\\n\\t\\tuint256 amountOut = s_uniswapOracle.estimateAmountOut(\\r\\n\\t\\t\\ts_uniswapPool,\\r\\n\\t\\t\\ts_erc20Token,\\r\\n\\t\\t\\t1e18, // number of decimals for erc20 token\\r\\n\\t\\t\\t300 // 5 minutes of price data (300 seconds)\\r\\n\\t\\t);\\r\\n\\t\\treturn amountOut;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getExactPrice() public view returns (uint256) {\\r\\n\\t\\tuint256 amountOut = s_uniswapOracle.estimateAmountOut(\\r\\n\\t\\t\\ts_uniswapPool,\\r\\n\\t\\t\\ts_erc20Token,\\r\\n\\t\\t\\t1e18, // number of decimals for erc20 token\\r\\n\\t\\t\\t1\\r\\n\\t\\t);\\r\\n\\t\\treturn amountOut;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Swaps the user's ERC20 tokens for stablecoins on Uniswap.\\r\\n\\t * @dev Currently public for testing, but intended to be private in deployment. Non-reentrant.\\r\\n\\t * @param amount The amount of the ERC20 token to swap.\\r\\n\\t */\\r\\n\\tfunction swapOnUniswap(uint256 amount) public nonReentrant {\\r\\n\\t\\t//swap ERC20 tokens for stablecoin on uniswap\\r\\n\\t\\t//need to approve uniswap to spend ERC20 tokens\\r\\n\\r\\n\\t\\t//gets the most up to date price to calculate slippage\\r\\n\\t\\tuint256 currentPrice = getExactPrice();\\r\\n\\t\\tuint256 minAmountOut;\\r\\n\\t\\tif (slippageProtection) {\\r\\n\\t\\t\\tminAmountOut = (amount * currentPrice * 995) / (1000 * 1e18); //99.5% of the current price\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tminAmountOut = 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tIERC20(s_erc20Token).approve(address(s_uniswapRouter), amount);\\r\\n\\r\\n\\t\\ts_erc20Balance -= amount;\\r\\n\\t\\tISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputSingleParams({\\r\\n\\t\\t\\t\\ttokenIn: s_erc20Token,\\r\\n\\t\\t\\t\\ttokenOut: s_stablecoin,\\r\\n\\t\\t\\t\\tfee: s_poolFee,\\r\\n\\t\\t\\t\\trecipient: address(this),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: amount,\\r\\n\\t\\t\\t\\tamountOutMinimum: minAmountOut,\\r\\n\\t\\t\\t\\tsqrtPriceLimitX96: 0\\r\\n\\t\\t\\t});\\r\\n\\t\\ts_uniswapRouter.exactInputSingle(params);\\r\\n\\r\\n\\t\\tuint256 amountRecieved = IERC20(s_stablecoin).balanceOf(address(this));\\r\\n\\t\\ts_stablecoinBalance += amountRecieved;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Activates slippage protection for token swaps.\\r\\n\\t * @dev Can only be called by the contract owner.\\r\\n\\t */\\r\\n\\tfunction toggleSlippageProtection() public onlyManager {\\r\\n\\t\\tslippageProtection = !slippageProtection;\\r\\n\\t}\\r\\n\\r\\n\\t// View functions for contract interaction and frontend integration\\r\\n\\tfunction getERC20Balance() public view returns (uint256) {\\r\\n\\t\\treturn s_erc20Balance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getStablecoinBalance() public view returns (uint256) {\\r\\n\\t\\treturn s_stablecoinBalance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTSLThreshold() public view returns (uint256) {\\r\\n\\t\\treturn s_tslThreshold;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isTSLActive() public view returns (bool) {\\r\\n\\t\\treturn s_isTSLActive;\\r\\n\\t}\\r\\n\\r\\n\\t// View function to get ERC20 token address\\r\\n\\tfunction getERC20TokenAddress() public view returns (address) {\\r\\n\\t\\treturn s_erc20Token;\\r\\n\\t}\\r\\n\\r\\n\\t// View function to get stablecoin address\\r\\n\\tfunction getStablecoinAddress() public view returns (address) {\\r\\n\\t\\treturn s_stablecoin;\\r\\n\\t}\\r\\n\\r\\n\\t// View function to get Uniswap router address\\r\\n\\tfunction getUniswapRouterAddress() public view returns (address) {\\r\\n\\t\\treturn address(s_uniswapRouter);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTrailAmount() public view returns (uint256) {\\r\\n\\t\\treturn s_trailAmount;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getManager() public view returns (address) {\\r\\n\\t\\treturn i_manager;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getCreator() public view returns (address) {\\r\\n\\t\\treturn i_creator;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getGranularity() public view returns (uint256) {\\r\\n\\t\\treturn s_granularity;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUniswapPool() public view returns (address) {\\r\\n\\t\\treturn s_uniswapPool;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x9fb3dcf73c55ba3e55a4d60e9bfb04b9a3d03e0d1747c5462ae1f351272e9e66\",\"license\":\"MIT\"},\"contracts/TrailMixManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n// import {ReentrancyGuard} from \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport { ReentrancyGuard } from \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\nerror NotContractOwner(); // Error for when the caller is not the contract owner\\r\\n\\r\\nimport { TrailMix } from \\\"./TrailMix.sol\\\"; // Import TrailMix contract\\r\\nimport { ITrailMix } from \\\"./ITrailMix.sol\\\"; // Import ITrailMix interface\\r\\n\\r\\ncontract TrailMixManager is ReentrancyGuard {\\r\\n\\t//array storing all active strategies\\r\\n\\taddress[] public activeStrategies;\\r\\n\\t// mapping to store index of strategy in activeStrategies array\\r\\n\\tmapping(address => uint256) private strategyIndex;\\r\\n\\r\\n\\t//mapping for quick lookup for if a strategy is active\\r\\n\\tmapping(address => bool) public isActiveStrategy;\\r\\n\\r\\n\\t// Mapping from user address to array of deployed TrailMix contract addresses\\r\\n\\tmapping(address => address[]) public userContracts;\\r\\n\\r\\n\\t// Event to emit when a new TrailMix contract is deployed\\r\\n\\tevent ContractDeployed(\\r\\n\\t\\taddress indexed creator,\\r\\n\\t\\taddress contractAddress,\\r\\n\\t\\tuint256 timestamp\\r\\n\\t);\\r\\n\\r\\n\\tevent FundsDeposited(\\r\\n\\t\\taddress indexed creator,\\r\\n\\t\\taddress indexed strategy,\\r\\n\\t\\tuint256 depositPrice,\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\taddress token,\\r\\n\\t\\tuint256 timestamp\\r\\n\\t);\\r\\n\\tevent FundsWithdrawn(\\r\\n\\t\\taddress indexed creator,\\r\\n\\t\\taddress indexed strategy,\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\taddress token,\\r\\n\\t\\tuint256 timestamp\\r\\n\\t);\\r\\n\\tevent ThresholdUpdated(\\r\\n\\t\\taddress indexed strategy,\\r\\n\\t\\tuint256 oldThreshold,\\r\\n\\t\\tuint256 newThreshold,\\r\\n\\t\\tuint256 timestamp\\r\\n\\t);\\r\\n\\tevent SwapExecuted(\\r\\n\\t\\taddress indexed strategy,\\r\\n\\t\\taddress indexed creator,\\r\\n\\t\\tuint256 amountIn,\\r\\n\\t\\tuint256 amountOut,\\r\\n\\t\\taddress tokenIn,\\r\\n\\t\\taddress tokenOut,\\r\\n\\t\\tuint256 timestamp\\r\\n\\t);\\r\\n\\r\\n\\t// Function to deploy a new TrailMix contract\\r\\n\\tfunction deployTrailMix(\\r\\n\\t\\taddress _erc20Token,\\r\\n\\t\\taddress _stablecoin,\\r\\n\\t\\taddress _uniswapRouter,\\r\\n\\t\\taddress _uniswapPool,\\r\\n\\t\\taddress _uniswapOracle,\\r\\n\\t\\tuint256 _trailAmount,\\r\\n\\t\\tuint256 _granularity,\\r\\n\\t\\tuint24 _poolFee\\r\\n\\t) public {\\r\\n\\t\\t// Deploy the TrailMix contract\\r\\n\\t\\tTrailMix newTrailMix = new TrailMix(\\r\\n\\t\\t\\taddress(this), // The TrailMixManager contract address\\r\\n\\t\\t\\tmsg.sender, // The user becomes the creator of the TrailMix contract\\r\\n\\t\\t\\t_erc20Token,\\r\\n\\t\\t\\t_stablecoin,\\r\\n\\t\\t\\t_uniswapRouter,\\r\\n\\t\\t\\t_uniswapPool,\\r\\n\\t\\t\\t_uniswapOracle,\\r\\n\\t\\t\\t_trailAmount,\\r\\n\\t\\t\\t_granularity,\\r\\n\\t\\t\\t_poolFee\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t// Store the contract address in the userContracts mapping\\r\\n\\t\\tuserContracts[msg.sender].push(address(newTrailMix));\\r\\n\\t\\tactiveStrategies.push(address(newTrailMix));\\r\\n\\t\\tisActiveStrategy[address(newTrailMix)] = true;\\r\\n\\t\\tstrategyIndex[address(newTrailMix)] = activeStrategies.length - 1;\\r\\n\\r\\n\\t\\t// Emit an event for the deployment\\r\\n\\t\\temit ContractDeployed(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\taddress(newTrailMix),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\t// IMPLEMENT DEPOSIT AND WITHDRAW FUNCTIONS\\r\\n\\tfunction deposit(\\r\\n\\t\\taddress _strategy,\\r\\n\\t\\tuint256 _amount,\\r\\n\\t\\tuint256 _tslThreshold\\r\\n\\t) public {\\r\\n\\t\\tif (ITrailMix(_strategy).getCreator() != msg.sender) {\\r\\n\\t\\t\\trevert NotContractOwner();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Get the ERC20 token address from the TrailMix contract\\r\\n\\t\\taddress erc20TokenAddress = ITrailMix(_strategy).getERC20TokenAddress();\\r\\n\\t\\t//transfer funds from user to the manager contract\\r\\n\\t\\tIERC20(erc20TokenAddress).transferFrom(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\t_amount\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t// approve strategy to spend the funds and call deposit\\r\\n\\t\\tIERC20(erc20TokenAddress).approve(_strategy, _amount);\\r\\n\\t\\tITrailMix(_strategy).deposit(_amount, _tslThreshold);\\r\\n\\r\\n\\t\\t// Emit an event for the deposit\\r\\n\\t\\temit FundsDeposited(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\t_strategy,\\r\\n\\t\\t\\tITrailMix(_strategy).getExactPrice(),\\r\\n\\t\\t\\t_amount,\\r\\n\\t\\t\\tITrailMix(_strategy).getERC20TokenAddress(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw(address _strategy, address _token) public nonReentrant {\\r\\n\\t\\t// Withdraw the user's funds from the TrailMix contract\\r\\n\\t\\tif (ITrailMix(_strategy).getCreator() != msg.sender) {\\r\\n\\t\\t\\trevert NotContractOwner();\\r\\n\\t\\t}\\r\\n\\t\\tITrailMix(_strategy).withdraw(_token);\\r\\n\\t\\tremoveStrategy(_strategy);\\r\\n\\t}\\r\\n\\r\\n\\tfunction toggleSlippageProtection(address _strategy) public {\\r\\n\\t\\tif (ITrailMix(_strategy).getCreator() != msg.sender) {\\r\\n\\t\\t\\trevert NotContractOwner();\\r\\n\\t\\t}\\r\\n\\t\\tITrailMix(_strategy).toggleSlippageProtection();\\r\\n\\t}\\r\\n\\r\\n\\t// Remove a strategy\\r\\n\\tfunction removeStrategy(address strategy) private {\\r\\n\\t\\trequire(strategy != address(0), \\\"Invalid address\\\");\\r\\n\\t\\trequire(isActiveStrategy[strategy], \\\"Strategy not active\\\");\\r\\n\\r\\n\\t\\tisActiveStrategy[strategy] = false;\\r\\n\\r\\n\\t\\t// Move the last element into the place to delete\\r\\n\\t\\tuint256 index = strategyIndex[strategy];\\r\\n\\t\\taddress lastStrategy = activeStrategies[activeStrategies.length - 1];\\r\\n\\t\\tactiveStrategies[index] = lastStrategy;\\r\\n\\t\\tstrategyIndex[lastStrategy] = index;\\r\\n\\t\\tactiveStrategies.pop();\\r\\n\\r\\n\\t\\t// Clean up\\r\\n\\t\\tdelete strategyIndex[strategy];\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Checks if upkeep is needed based on TSL conditions.COMPUTED OFF-CHAIN\\r\\n\\t * @dev Part of the Gelato automation\\r\\n\\t * @return canExec Boolean flag indicating if upkeep is needed.\\r\\n\\t * @return execPayload Encoded data on what action to perform during upkeep.\\r\\n\\t */\\r\\n\\tfunction checker()\\r\\n\\t\\texternal\\r\\n\\t\\tview\\r\\n\\t\\treturns (bool canExec, bytes memory execPayload)\\r\\n\\t{\\r\\n\\t\\tbool updateNeeded = false;\\r\\n\\t\\tbytes memory updateData;\\r\\n\\t\\tfor (uint256 i = 0; i < activeStrategies.length; i++) {\\r\\n\\t\\t\\t(bool sell, bool update, uint256 newThreshold) = ITrailMix(\\r\\n\\t\\t\\t\\tactiveStrategies[i]\\r\\n\\t\\t\\t).checkUpkeepNeeded();\\r\\n\\r\\n\\t\\t\\tif (sell) {\\r\\n\\t\\t\\t\\t// Prioritize swap action if needed\\r\\n\\t\\t\\t\\treturn (\\r\\n\\t\\t\\t\\t\\ttrue,\\r\\n\\t\\t\\t\\t\\tabi.encodeWithSelector(\\r\\n\\t\\t\\t\\t\\t\\tthis.performUpkeep.selector,\\r\\n\\t\\t\\t\\t\\t\\tactiveStrategies[i],\\r\\n\\t\\t\\t\\t\\t\\tsell,\\r\\n\\t\\t\\t\\t\\t\\tupdate,\\r\\n\\t\\t\\t\\t\\t\\tnewThreshold\\r\\n\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t} else if (update) {\\r\\n\\t\\t\\t\\t// If no swap needed, check for threshold update\\r\\n\\t\\t\\t\\t// Note: This approach only encodes action for the first strategy needing an action.\\r\\n\\t\\t\\t\\t// If you want to encode actions for all strategies, you'd need to aggregate the data differently.\\r\\n\\t\\t\\t\\t// Store the update action if no sell actions have been found\\r\\n\\t\\t\\t\\tif (!updateNeeded) {\\r\\n\\t\\t\\t\\t\\tupdateNeeded = true;\\r\\n\\t\\t\\t\\t\\tupdateData = abi.encodeWithSelector(\\r\\n\\t\\t\\t\\t\\t\\tthis.performUpkeep.selector,\\r\\n\\t\\t\\t\\t\\t\\tactiveStrategies[i],\\r\\n\\t\\t\\t\\t\\t\\tsell,\\r\\n\\t\\t\\t\\t\\t\\tupdate,\\r\\n\\t\\t\\t\\t\\t\\tnewThreshold\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// Don't return yet if you want to prioritize sells across all strategies\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (updateNeeded) {\\r\\n\\t\\t\\treturn (true, updateData);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn (false, \\\"\\\");\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @notice Performs the upkeep of updating the stop loss threshold or triggering a sell.\\r\\n\\t * @dev Part of the gelato automation.\\r\\n\\t */\\r\\n\\tfunction performUpkeep(\\r\\n\\t\\taddress strategy,\\r\\n\\t\\tbool sell,\\r\\n\\t\\tbool updateThreshold,\\r\\n\\t\\tuint256 newThreshold\\r\\n\\t) external {\\r\\n\\t\\t// Implement logic to perform TSL (e.g., swap to stablecoin) when conditions are met\\r\\n\\r\\n\\t\\tif (sell) {\\r\\n\\t\\t\\t//call trigger function to sell on uniswap\\r\\n\\t\\t\\tuint256 s_erc20Balance = ITrailMix(strategy).getERC20Balance();\\r\\n\\t\\t\\tITrailMix(strategy).swapOnUniswap(s_erc20Balance);\\r\\n\\t\\t\\t//deactivate TSL\\r\\n\\t\\t\\tremoveStrategy(strategy);\\r\\n\\r\\n\\t\\t\\t//emit swap event\\r\\n\\t\\t\\temit SwapExecuted(\\r\\n\\t\\t\\t\\tstrategy,\\r\\n\\t\\t\\t\\tITrailMix(strategy).getCreator(),\\r\\n\\t\\t\\t\\ts_erc20Balance,\\r\\n\\t\\t\\t\\tITrailMix(strategy).getStablecoinBalance(),\\r\\n\\t\\t\\t\\tITrailMix(strategy).getERC20TokenAddress(),\\r\\n\\t\\t\\t\\tITrailMix(strategy).getStablecoinAddress(),\\r\\n\\t\\t\\t\\tblock.timestamp\\r\\n\\t\\t\\t);\\r\\n\\t\\t} else if (updateThreshold) {\\r\\n\\t\\t\\t//call updateThreshold function to update the threshold\\r\\n\\t\\t\\tITrailMix(strategy).updateTSLThreshold(newThreshold);\\r\\n\\t\\t\\t//emit event for threshold update\\r\\n\\t\\t\\temit ThresholdUpdated(\\r\\n\\t\\t\\t\\tstrategy,\\r\\n\\t\\t\\t\\tITrailMix(strategy).getTSLThreshold(),\\r\\n\\t\\t\\t\\tnewThreshold,\\r\\n\\t\\t\\t\\tblock.timestamp\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Function to get all contracts deployed by a user\\r\\n\\tfunction getUserContracts(\\r\\n\\t\\taddress user\\r\\n\\t) public view returns (address[] memory) {\\r\\n\\t\\treturn userContracts[user];\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xe624a4ba09c872b32f2ab6d106ac5a8c4eaff770719eaa540713a43629b0cdb2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000556127e8806100256000396000f3fe60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063b789003d116200006e578063b789003d1462000156578063cf5303cf146200016d578063d25815031462000187578063f3d746f914620001be578063f940e38514620001d557600080fd5b80630efe6a8b14620000b057806334c925f014620000c9578063442717b214620000f8578063ab2e2000146200010f578063b20b24291462000126575b600080fd5b620000c7620000c13660046200125f565b620001ec565b005b620000e0620000da36600462001297565b62000575565b604051620000ef9190620012be565b60405180910390f35b620000c7620001093660046200130d565b620005ed565b620000c762000120366004620013c7565b6200077e565b6200013d620001373660046200141f565b62000b72565b6040516001600160a01b039091168152602001620000ef565b6200013d6200016736600462001439565b62000b9d565b6200017762000bd6565b604051620000ef92919062001468565b620001ad6200019836600462001297565b60036020526000908152604090205460ff1681565b6040519015158152602001620000ef565b620000c7620001cf36600462001297565b62000e15565b620000c7620001e6366004620014c2565b62000f04565b336001600160a01b0316836001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025b919062001500565b6001600160a01b031614620002835760405163bfcafd3760e01b815260040160405180910390fd5b6000836001600160a01b031663624aa0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ea919062001500565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af115801562000341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000367919062001520565b5060405163095ea7b360e01b81526001600160a01b0385811660048301526024820185905282169063095ea7b3906044016020604051808303816000875af1158015620003b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003de919062001520565b50604051631c57762b60e31b815260048101849052602481018390526001600160a01b0385169063e2bbb15890604401600060405180830381600087803b1580156200042957600080fd5b505af11580156200043e573d6000803e3d6000fd5b50505050836001600160a01b0316336001600160a01b03167fe42b1ca8ab3c97aae5362c2ebb792b5360226796869d8086c048adad7b882a15866001600160a01b0316639a31c0096040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004dc919062001540565b86886001600160a01b031663624aa0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200051c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000542919062001500565b6040805193845260208401929092526001600160a01b03169082015242606082015260800160405180910390a350505050565b6001600160a01b038116600090815260046020908152604091829020805483518184028101840190945280845260609392830182828015620005e157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620005c2575b50505050509050919050565b600030338a8a8a8a8a8a8a8a604051620006079062001238565b6001600160a01b039a8b168152988a1660208a015296891660408901529488166060880152928716608087015290861660a086015290941660c084015260e083019390935261010082019290925262ffffff90911661012082015261014001604051809103906000f08015801562000683573d6000803e3d6000fd5b503360009081526004602090815260408083208054600181810183559185528385200180546001600160a01b0387166001600160a01b03199182168117909255825480840184557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549091168217905584526003909252909120805460ff1916821790558054919250620007199162001570565b6001600160a01b038216600081815260026020908152604091829020939093558051918252429282019290925233917fac4ce915ef22753b636e57aac5ae5fdd9d13d782ae5bf6dbcda15e29f95386c1910160405180910390a2505050505050505050565b821562000a5a576000846001600160a01b031663c3736fe66040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ec919062001540565b6040516353e6ce7760e11b8152600481018290529091506001600160a01b0386169063a7cd9cee90602401600060405180830381600087803b1580156200083257600080fd5b505af115801562000847573d6000803e3d6000fd5b5050505062000856856200101c565b846001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000895573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bb919062001500565b6001600160a01b0316856001600160a01b03167ffe45b5432fda489a54f62aee430bcf72a5639b3174a0528dc94572338079642683886001600160a01b03166368e6ea756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200092f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000955919062001540565b896001600160a01b031663624aa0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000994573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009ba919062001500565b8a6001600160a01b0316637bef4f546040518163ffffffff1660e01b8152600401602060405180830381865afa158015620009f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a1f919062001500565b6040805194855260208501939093526001600160a01b0391821684840152166060830152426080830152519081900360a00190a35062000b6c565b811562000b6c57604051632539276f60e21b8152600481018290526001600160a01b038516906394e49dbc90602401600060405180830381600087803b15801562000aa457600080fd5b505af115801562000ab9573d6000803e3d6000fd5b50505050836001600160a01b03167f0bd3cc1c5d7fe612c55d1f11d85563be2fbfe6b40cb0d0361e60b07b996fbeda856001600160a01b031663f9a19e546040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b4d919062001540565b6040805191825260208201859052429082015260600160405180910390a25b50505050565b6001818154811062000b8357600080fd5b6000918252602090912001546001600160a01b0316905081565b6004602052816000526040600020818154811062000bba57600080fd5b6000918252602090912001546001600160a01b03169150829050565b600060606000606060005b60015481101562000de65760008060006001848154811062000c075762000c076200158c565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663f0b946846040518163ffffffff1660e01b8152600401606060405180830381865afa15801562000c63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c899190620015a2565b925092509250821562000d3057600163ab2e200060e01b6001868154811062000cb65762000cb66200158c565b6000918252602090912001546040516001600160a01b039091166024820152851515604482015284151560648201526084810184905260a40160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290999098509650505050505050565b811562000dcd578562000dcd576001955063ab2e200060e01b6001858154811062000d5f5762000d5f6200158c565b6000918252602090912001546040516001600160a01b039091166024820152841515604482015283151560648201526084810183905260a40160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915294505b505050808062000ddd90620015ea565b91505062000be1565b50811562000df957600194909350915050565b6000604051806020016040528060008152509350935050509091565b336001600160a01b0316816001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000e5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e84919062001500565b6001600160a01b03161462000eac5760405163bfcafd3760e01b815260040160405180910390fd5b806001600160a01b031663def74f916040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000ee857600080fd5b505af115801562000efd573d6000803e3d6000fd5b5050505050565b62000f0e620011dd565b336001600160a01b0316826001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f7d919062001500565b6001600160a01b03161462000fa55760405163bfcafd3760e01b815260040160405180910390fd5b6040516351cff8d960e01b81526001600160a01b0382811660048301528316906351cff8d990602401600060405180830381600087803b15801562000fe957600080fd5b505af115801562000ffe573d6000803e3d6000fd5b505050506200100d826200101c565b620010186001600055565b5050565b6001600160a01b0381166200106a5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff16620010ca5760405162461bcd60e51b81526020600482015260136024820152725374726174656779206e6f742061637469766560681b604482015260640162001061565b6001600160a01b0381166000908152600360209081526040808320805460ff191690556002909152812054600180549192916200110990829062001570565b815481106200111c576200111c6200158c565b600091825260209091200154600180546001600160a01b0390921692508291849081106200114e576200114e6200158c565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815260029091526040902082905560018054806200119b576200119b62001606565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600290935250506040812055565b600260005403620012315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162001061565b6002600055565b611196806200161d83390190565b6001600160a01b03811681146200125c57600080fd5b50565b6000806000606084860312156200127557600080fd5b8335620012828162001246565b95602085013595506040909401359392505050565b600060208284031215620012aa57600080fd5b8135620012b78162001246565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620013015783516001600160a01b031683529284019291840191600101620012da565b50909695505050505050565b600080600080600080600080610100898b0312156200132b57600080fd5b8835620013388162001246565b975060208901356200134a8162001246565b965060408901356200135c8162001246565b955060608901356200136e8162001246565b94506080890135620013808162001246565b935060a0890135925060c0890135915060e089013562ffffff81168114620013a757600080fd5b809150509295985092959890939650565b80151581146200125c57600080fd5b60008060008060808587031215620013de57600080fd5b8435620013eb8162001246565b93506020850135620013fd81620013b8565b925060408501356200140f81620013b8565b9396929550929360600135925050565b6000602082840312156200143257600080fd5b5035919050565b600080604083850312156200144d57600080fd5b82356200145a8162001246565b946020939093013593505050565b821515815260006020604081840152835180604085015260005b81811015620014a05785810183015185820160600152820162001482565b506000606082860101526060601f19601f830116850101925050509392505050565b60008060408385031215620014d657600080fd5b8235620014e38162001246565b91506020830135620014f58162001246565b809150509250929050565b6000602082840312156200151357600080fd5b8151620012b78162001246565b6000602082840312156200153357600080fd5b8151620012b781620013b8565b6000602082840312156200155357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156200158657620015866200155a565b92915050565b634e487b7160e01b600052603260045260246000fd5b600080600060608486031215620015b857600080fd5b8351620015c581620013b8565b6020850151909350620015d881620013b8565b80925050604084015190509250925092565b600060018201620015ff57620015ff6200155a565b5060010190565b634e487b7160e01b600052603160045260246000fdfe6101006040523480156200001257600080fd5b5060405162001196380380620011968339810160408190526200003591620000ed565b600160008190556001600160a01b039a8b16608052988a1660a0528854978a166001600160a01b03199889161790985560028054968a169688169690961790955560038054948916948716949094179093556004805491881691909516179093559190931660c0526009805460e09290925260089390935562ffffff909116620100000264ffffffffff1990911617610100179055620001b5565b80516001600160a01b0381168114620000e857600080fd5b919050565b6000806000806000806000806000806101408b8d0312156200010e57600080fd5b620001198b620000d0565b99506200012960208c01620000d0565b98506200013960408c01620000d0565b97506200014960608c01620000d0565b96506200015960808c01620000d0565b95506200016960a08c01620000d0565b94506200017960c08c01620000d0565b935060e08b015192506101008b015191506101208b015162ffffff81168114620001a257600080fd5b809150509295989b9194979a5092959850565b60805160a05160c05160e051610f4c6200024a600039600081816102670152818161096e01528181610a820152610b260152600081816101800152818161021e015281816104f401526109ee01526000818161013e015281816103b5015261043701526000818161029e0152818161031d01528181610480015281816107c50152818161082a01526108a20152610f4c6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639a31c009116100b8578063d50095841161007c578063d50095841461029c578063def74f91146102c2578063e2bbb158146102ca578063eee2bfa0146102dd578063f0b94684146102e5578063f9a19e541461030a57600080fd5b80639a31c00914610242578063a7cd9cee1461024a578063c3736fe61461025d578063c612a80814610265578063d39ac0cb1461028b57600080fd5b8063666468d5116100ff578063666468d5146101da57806368e6ea75146101f05780637bef4f54146101f857806394e49dbc14610209578063983733f01461021c57600080fd5b80630ee2cb101461013c5780631966b6081461017b5780634096c91c146101a257806351cff8d9146101b4578063624aa0fd146101c9575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b61015e7f000000000000000000000000000000000000000000000000000000000000000081565b6008545b604051908152602001610172565b6101c76101c2366004610cce565b610312565b005b6001546001600160a01b031661015e565b60095460ff166040519015158152602001610172565b6007546101a6565b6002546001600160a01b031661015e565b6101c7610217366004610cfe565b610475565b7f000000000000000000000000000000000000000000000000000000000000000061015e565b6101a66104c2565b6101c7610258366004610cfe565b610571565b6006546101a6565b7f00000000000000000000000000000000000000000000000000000000000000006101a6565b6003546001600160a01b031661015e565b7f000000000000000000000000000000000000000000000000000000000000000061015e565b6101c76107ba565b6101c76102d8366004610d17565b61081f565b6101a66109bd565b6102ed610a26565b604080519315158452911515602084015290820152606001610172565b6005546101a6565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103635760405162461bcd60e51b815260040161035a90610d39565b60405180910390fd5b6002546000906001600160a01b03908116908316036103e857506007548061039e5760405163162908e360e11b815260040160405180910390fd5b60006007556002546103da906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083610b75565b6009805460ff191690555050565b6001546001600160a01b039081169083160361045c5750600654806104205760405163162908e360e11b815260040160405180910390fd5b60006006556001546103da906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083610b75565b60405163c1ab6dc160e01b815260040160405180910390fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104bd5760405162461bcd60e51b815260040161035a90610d39565b600555565b60048054600180546040516317f271b760e31b815260009485946001600160a01b039081169463bf938db89461052a947f0000000000000000000000000000000000000000000000000000000000000000949190931692670de0b6b3a7640000929101610d7a565b602060405180830381865afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190610dba565b92915050565b610579610c75565b60006105836104c2565b600954909150600090610100900460ff16156105ca57683635c9adc5dea000006105ad8385610de9565b6105b9906103e3610de9565b6105c39190610e00565b90506105ce565b5060005b60015460035460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af1158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610e22565b50826006600082825461065a9190610e44565b909155505060408051610100810182526001546001600160a01b0390811682526002548116602083015260095462010000900462ffffff168284015230606083015242608083015260a0820186905260c08201849052600060e0830152600354925163414bf38960e01b81529192169063414bf389906106de908490600401610e57565b6020604051808303816000875af11580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190610dba565b506002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f9190610dba565b905080600760008282546107a39190610ed4565b90915550506001600055506107b792505050565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108025760405162461bcd60e51b815260040161035a90610d39565b6009805461ff001981166101009182900460ff1615909102179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108675760405162461bcd60e51b815260040161035a90610d39565b600082116108885760405163162908e360e11b815260040160405180910390fd5b6001546040516323b872dd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301523060248301526044820185905260009216906323b872dd906064016020604051808303816000875af1158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190610e22565b905080610946576040516312171d8360e31b815260040160405180910390fd5b82600660008282546109589190610ed4565b909155505060095460ff166109b85760646109937f000000000000000000000000000000000000000000000000000000000000000082610e44565b61099d9084610de9565b6109a79190610e00565b6005556009805460ff191660011790555b505050565b600480546001546040516317f271b760e31b815260009384936001600160a01b039081169363bf938db89361052a937f00000000000000000000000000000000000000000000000000000000000000009390921691670de0b6b3a76400009161012c9101610d7a565b600080600080610a346109bd565b90506000610a406104c2565b905060008080806064610a5487605a610de9565b610a5e9190610e00565b905060006064610a6f88606e610de9565b610a799190610e00565b90506000610aa87f00000000000000000000000000000000000000000000000000000000000000006064610e44565b600554610ab6906064610de9565b610ac09190610e00565b9050600060646008546064610ad59190610ed4565b610adf9084610de9565b610ae99190610e00565b9050838810158015610afb5750828811155b15610b6257600554891015610b135760019650610b62565b80891115610b6257600195506064610b4b7f000000000000000000000000000000000000000000000000000000000000000082610e44565b610b55908b610de9565b610b5f9190610e00565b94505b50949a9399509197509195505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610bd19190610ee7565b6000604051808303816000865af19150503d8060008114610c0e576040519150601f19603f3d011682016040523d82523d6000602084013e610c13565b606091505b5091509150818015610c3d575080511580610c3d575080806020019051810190610c3d9190610e22565b610c6e5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161035a565b5050505050565b600260005403610cc75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161035a565b6002600055565b600060208284031215610ce057600080fd5b81356001600160a01b0381168114610cf757600080fd5b9392505050565b600060208284031215610d1057600080fd5b5035919050565b60008060408385031215610d2a57600080fd5b50508035926020909101359150565b60208082526021908201527f6f6e6c792063616c6c61626c65206279206d616e6167657220636f6e747261636040820152601d60fa1b606082015260800190565b6001600160a01b0394851681529290931660208301526fffffffffffffffffffffffffffffffff16604082015263ffffffff909116606082015260800190565b600060208284031215610dcc57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761056b5761056b610dd3565b600082610e1d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e3457600080fd5b81518015158114610cf757600080fd5b8181038181111561056b5761056b610dd3565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610ecd60e08401826001600160a01b03169052565b5092915050565b8082018082111561056b5761056b610dd3565b6000825160005b81811015610f085760208186018101518583015201610eee565b50600092019182525091905056fea2646970667358221220c1a33a2b8a5d623d985f60ec31f072ddaf1b675e33ce576008b8c849cbfdecee64736f6c63430008140033a26469706673582212201b92e2aeadad13e172ff7f741a181f13a29429d11d3231a93c89895d55ef9f2364736f6c63430008140033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063b789003d116200006e578063b789003d1462000156578063cf5303cf146200016d578063d25815031462000187578063f3d746f914620001be578063f940e38514620001d557600080fd5b80630efe6a8b14620000b057806334c925f014620000c9578063442717b214620000f8578063ab2e2000146200010f578063b20b24291462000126575b600080fd5b620000c7620000c13660046200125f565b620001ec565b005b620000e0620000da36600462001297565b62000575565b604051620000ef9190620012be565b60405180910390f35b620000c7620001093660046200130d565b620005ed565b620000c762000120366004620013c7565b6200077e565b6200013d620001373660046200141f565b62000b72565b6040516001600160a01b039091168152602001620000ef565b6200013d6200016736600462001439565b62000b9d565b6200017762000bd6565b604051620000ef92919062001468565b620001ad6200019836600462001297565b60036020526000908152604090205460ff1681565b6040519015158152602001620000ef565b620000c7620001cf36600462001297565b62000e15565b620000c7620001e6366004620014c2565b62000f04565b336001600160a01b0316836001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025b919062001500565b6001600160a01b031614620002835760405163bfcafd3760e01b815260040160405180910390fd5b6000836001600160a01b031663624aa0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ea919062001500565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af115801562000341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000367919062001520565b5060405163095ea7b360e01b81526001600160a01b0385811660048301526024820185905282169063095ea7b3906044016020604051808303816000875af1158015620003b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003de919062001520565b50604051631c57762b60e31b815260048101849052602481018390526001600160a01b0385169063e2bbb15890604401600060405180830381600087803b1580156200042957600080fd5b505af11580156200043e573d6000803e3d6000fd5b50505050836001600160a01b0316336001600160a01b03167fe42b1ca8ab3c97aae5362c2ebb792b5360226796869d8086c048adad7b882a15866001600160a01b0316639a31c0096040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004dc919062001540565b86886001600160a01b031663624aa0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200051c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000542919062001500565b6040805193845260208401929092526001600160a01b03169082015242606082015260800160405180910390a350505050565b6001600160a01b038116600090815260046020908152604091829020805483518184028101840190945280845260609392830182828015620005e157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620005c2575b50505050509050919050565b600030338a8a8a8a8a8a8a8a604051620006079062001238565b6001600160a01b039a8b168152988a1660208a015296891660408901529488166060880152928716608087015290861660a086015290941660c084015260e083019390935261010082019290925262ffffff90911661012082015261014001604051809103906000f08015801562000683573d6000803e3d6000fd5b503360009081526004602090815260408083208054600181810183559185528385200180546001600160a01b0387166001600160a01b03199182168117909255825480840184557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549091168217905584526003909252909120805460ff1916821790558054919250620007199162001570565b6001600160a01b038216600081815260026020908152604091829020939093558051918252429282019290925233917fac4ce915ef22753b636e57aac5ae5fdd9d13d782ae5bf6dbcda15e29f95386c1910160405180910390a2505050505050505050565b821562000a5a576000846001600160a01b031663c3736fe66040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ec919062001540565b6040516353e6ce7760e11b8152600481018290529091506001600160a01b0386169063a7cd9cee90602401600060405180830381600087803b1580156200083257600080fd5b505af115801562000847573d6000803e3d6000fd5b5050505062000856856200101c565b846001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000895573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bb919062001500565b6001600160a01b0316856001600160a01b03167ffe45b5432fda489a54f62aee430bcf72a5639b3174a0528dc94572338079642683886001600160a01b03166368e6ea756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200092f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000955919062001540565b896001600160a01b031663624aa0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000994573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009ba919062001500565b8a6001600160a01b0316637bef4f546040518163ffffffff1660e01b8152600401602060405180830381865afa158015620009f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a1f919062001500565b6040805194855260208501939093526001600160a01b0391821684840152166060830152426080830152519081900360a00190a35062000b6c565b811562000b6c57604051632539276f60e21b8152600481018290526001600160a01b038516906394e49dbc90602401600060405180830381600087803b15801562000aa457600080fd5b505af115801562000ab9573d6000803e3d6000fd5b50505050836001600160a01b03167f0bd3cc1c5d7fe612c55d1f11d85563be2fbfe6b40cb0d0361e60b07b996fbeda856001600160a01b031663f9a19e546040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b4d919062001540565b6040805191825260208201859052429082015260600160405180910390a25b50505050565b6001818154811062000b8357600080fd5b6000918252602090912001546001600160a01b0316905081565b6004602052816000526040600020818154811062000bba57600080fd5b6000918252602090912001546001600160a01b03169150829050565b600060606000606060005b60015481101562000de65760008060006001848154811062000c075762000c076200158c565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663f0b946846040518163ffffffff1660e01b8152600401606060405180830381865afa15801562000c63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c899190620015a2565b925092509250821562000d3057600163ab2e200060e01b6001868154811062000cb65762000cb66200158c565b6000918252602090912001546040516001600160a01b039091166024820152851515604482015284151560648201526084810184905260a40160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290999098509650505050505050565b811562000dcd578562000dcd576001955063ab2e200060e01b6001858154811062000d5f5762000d5f6200158c565b6000918252602090912001546040516001600160a01b039091166024820152841515604482015283151560648201526084810183905260a40160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915294505b505050808062000ddd90620015ea565b91505062000be1565b50811562000df957600194909350915050565b6000604051806020016040528060008152509350935050509091565b336001600160a01b0316816001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000e5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e84919062001500565b6001600160a01b03161462000eac5760405163bfcafd3760e01b815260040160405180910390fd5b806001600160a01b031663def74f916040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000ee857600080fd5b505af115801562000efd573d6000803e3d6000fd5b5050505050565b62000f0e620011dd565b336001600160a01b0316826001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f7d919062001500565b6001600160a01b03161462000fa55760405163bfcafd3760e01b815260040160405180910390fd5b6040516351cff8d960e01b81526001600160a01b0382811660048301528316906351cff8d990602401600060405180830381600087803b15801562000fe957600080fd5b505af115801562000ffe573d6000803e3d6000fd5b505050506200100d826200101c565b620010186001600055565b5050565b6001600160a01b0381166200106a5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff16620010ca5760405162461bcd60e51b81526020600482015260136024820152725374726174656779206e6f742061637469766560681b604482015260640162001061565b6001600160a01b0381166000908152600360209081526040808320805460ff191690556002909152812054600180549192916200110990829062001570565b815481106200111c576200111c6200158c565b600091825260209091200154600180546001600160a01b0390921692508291849081106200114e576200114e6200158c565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918316815260029091526040902082905560018054806200119b576200119b62001606565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600290935250506040812055565b600260005403620012315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162001061565b6002600055565b611196806200161d83390190565b6001600160a01b03811681146200125c57600080fd5b50565b6000806000606084860312156200127557600080fd5b8335620012828162001246565b95602085013595506040909401359392505050565b600060208284031215620012aa57600080fd5b8135620012b78162001246565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620013015783516001600160a01b031683529284019291840191600101620012da565b50909695505050505050565b600080600080600080600080610100898b0312156200132b57600080fd5b8835620013388162001246565b975060208901356200134a8162001246565b965060408901356200135c8162001246565b955060608901356200136e8162001246565b94506080890135620013808162001246565b935060a0890135925060c0890135915060e089013562ffffff81168114620013a757600080fd5b809150509295985092959890939650565b80151581146200125c57600080fd5b60008060008060808587031215620013de57600080fd5b8435620013eb8162001246565b93506020850135620013fd81620013b8565b925060408501356200140f81620013b8565b9396929550929360600135925050565b6000602082840312156200143257600080fd5b5035919050565b600080604083850312156200144d57600080fd5b82356200145a8162001246565b946020939093013593505050565b821515815260006020604081840152835180604085015260005b81811015620014a05785810183015185820160600152820162001482565b506000606082860101526060601f19601f830116850101925050509392505050565b60008060408385031215620014d657600080fd5b8235620014e38162001246565b91506020830135620014f58162001246565b809150509250929050565b6000602082840312156200151357600080fd5b8151620012b78162001246565b6000602082840312156200153357600080fd5b8151620012b781620013b8565b6000602082840312156200155357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156200158657620015866200155a565b92915050565b634e487b7160e01b600052603260045260246000fd5b600080600060608486031215620015b857600080fd5b8351620015c581620013b8565b6020850151909350620015d881620013b8565b80925050604084015190509250925092565b600060018201620015ff57620015ff6200155a565b5060010190565b634e487b7160e01b600052603160045260246000fdfe6101006040523480156200001257600080fd5b5060405162001196380380620011968339810160408190526200003591620000ed565b600160008190556001600160a01b039a8b16608052988a1660a0528854978a166001600160a01b03199889161790985560028054968a169688169690961790955560038054948916948716949094179093556004805491881691909516179093559190931660c0526009805460e09290925260089390935562ffffff909116620100000264ffffffffff1990911617610100179055620001b5565b80516001600160a01b0381168114620000e857600080fd5b919050565b6000806000806000806000806000806101408b8d0312156200010e57600080fd5b620001198b620000d0565b99506200012960208c01620000d0565b98506200013960408c01620000d0565b97506200014960608c01620000d0565b96506200015960808c01620000d0565b95506200016960a08c01620000d0565b94506200017960c08c01620000d0565b935060e08b015192506101008b015191506101208b015162ffffff81168114620001a257600080fd5b809150509295989b9194979a5092959850565b60805160a05160c05160e051610f4c6200024a600039600081816102670152818161096e01528181610a820152610b260152600081816101800152818161021e015281816104f401526109ee01526000818161013e015281816103b5015261043701526000818161029e0152818161031d01528181610480015281816107c50152818161082a01526108a20152610f4c6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639a31c009116100b8578063d50095841161007c578063d50095841461029c578063def74f91146102c2578063e2bbb158146102ca578063eee2bfa0146102dd578063f0b94684146102e5578063f9a19e541461030a57600080fd5b80639a31c00914610242578063a7cd9cee1461024a578063c3736fe61461025d578063c612a80814610265578063d39ac0cb1461028b57600080fd5b8063666468d5116100ff578063666468d5146101da57806368e6ea75146101f05780637bef4f54146101f857806394e49dbc14610209578063983733f01461021c57600080fd5b80630ee2cb101461013c5780631966b6081461017b5780634096c91c146101a257806351cff8d9146101b4578063624aa0fd146101c9575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b61015e7f000000000000000000000000000000000000000000000000000000000000000081565b6008545b604051908152602001610172565b6101c76101c2366004610cce565b610312565b005b6001546001600160a01b031661015e565b60095460ff166040519015158152602001610172565b6007546101a6565b6002546001600160a01b031661015e565b6101c7610217366004610cfe565b610475565b7f000000000000000000000000000000000000000000000000000000000000000061015e565b6101a66104c2565b6101c7610258366004610cfe565b610571565b6006546101a6565b7f00000000000000000000000000000000000000000000000000000000000000006101a6565b6003546001600160a01b031661015e565b7f000000000000000000000000000000000000000000000000000000000000000061015e565b6101c76107ba565b6101c76102d8366004610d17565b61081f565b6101a66109bd565b6102ed610a26565b604080519315158452911515602084015290820152606001610172565b6005546101a6565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103635760405162461bcd60e51b815260040161035a90610d39565b60405180910390fd5b6002546000906001600160a01b03908116908316036103e857506007548061039e5760405163162908e360e11b815260040160405180910390fd5b60006007556002546103da906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083610b75565b6009805460ff191690555050565b6001546001600160a01b039081169083160361045c5750600654806104205760405163162908e360e11b815260040160405180910390fd5b60006006556001546103da906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083610b75565b60405163c1ab6dc160e01b815260040160405180910390fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104bd5760405162461bcd60e51b815260040161035a90610d39565b600555565b60048054600180546040516317f271b760e31b815260009485946001600160a01b039081169463bf938db89461052a947f0000000000000000000000000000000000000000000000000000000000000000949190931692670de0b6b3a7640000929101610d7a565b602060405180830381865afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190610dba565b92915050565b610579610c75565b60006105836104c2565b600954909150600090610100900460ff16156105ca57683635c9adc5dea000006105ad8385610de9565b6105b9906103e3610de9565b6105c39190610e00565b90506105ce565b5060005b60015460035460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af1158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610e22565b50826006600082825461065a9190610e44565b909155505060408051610100810182526001546001600160a01b0390811682526002548116602083015260095462010000900462ffffff168284015230606083015242608083015260a0820186905260c08201849052600060e0830152600354925163414bf38960e01b81529192169063414bf389906106de908490600401610e57565b6020604051808303816000875af11580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190610dba565b506002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f9190610dba565b905080600760008282546107a39190610ed4565b90915550506001600055506107b792505050565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108025760405162461bcd60e51b815260040161035a90610d39565b6009805461ff001981166101009182900460ff1615909102179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108675760405162461bcd60e51b815260040161035a90610d39565b600082116108885760405163162908e360e11b815260040160405180910390fd5b6001546040516323b872dd60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301523060248301526044820185905260009216906323b872dd906064016020604051808303816000875af1158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190610e22565b905080610946576040516312171d8360e31b815260040160405180910390fd5b82600660008282546109589190610ed4565b909155505060095460ff166109b85760646109937f000000000000000000000000000000000000000000000000000000000000000082610e44565b61099d9084610de9565b6109a79190610e00565b6005556009805460ff191660011790555b505050565b600480546001546040516317f271b760e31b815260009384936001600160a01b039081169363bf938db89361052a937f00000000000000000000000000000000000000000000000000000000000000009390921691670de0b6b3a76400009161012c9101610d7a565b600080600080610a346109bd565b90506000610a406104c2565b905060008080806064610a5487605a610de9565b610a5e9190610e00565b905060006064610a6f88606e610de9565b610a799190610e00565b90506000610aa87f00000000000000000000000000000000000000000000000000000000000000006064610e44565b600554610ab6906064610de9565b610ac09190610e00565b9050600060646008546064610ad59190610ed4565b610adf9084610de9565b610ae99190610e00565b9050838810158015610afb5750828811155b15610b6257600554891015610b135760019650610b62565b80891115610b6257600195506064610b4b7f000000000000000000000000000000000000000000000000000000000000000082610e44565b610b55908b610de9565b610b5f9190610e00565b94505b50949a9399509197509195505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610bd19190610ee7565b6000604051808303816000865af19150503d8060008114610c0e576040519150601f19603f3d011682016040523d82523d6000602084013e610c13565b606091505b5091509150818015610c3d575080511580610c3d575080806020019051810190610c3d9190610e22565b610c6e5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161035a565b5050505050565b600260005403610cc75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161035a565b6002600055565b600060208284031215610ce057600080fd5b81356001600160a01b0381168114610cf757600080fd5b9392505050565b600060208284031215610d1057600080fd5b5035919050565b60008060408385031215610d2a57600080fd5b50508035926020909101359150565b60208082526021908201527f6f6e6c792063616c6c61626c65206279206d616e6167657220636f6e747261636040820152601d60fa1b606082015260800190565b6001600160a01b0394851681529290931660208301526fffffffffffffffffffffffffffffffff16604082015263ffffffff909116606082015260800190565b600060208284031215610dcc57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761056b5761056b610dd3565b600082610e1d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e3457600080fd5b81518015158114610cf757600080fd5b8181038181111561056b5761056b610dd3565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610ecd60e08401826001600160a01b03169052565b5092915050565b8082018082111561056b5761056b610dd3565b6000825160005b81811015610f085760208186018101518583015201610eee565b50600092019182525091905056fea2646970667358221220c1a33a2b8a5d623d985f60ec31f072ddaf1b675e33ce576008b8c849cbfdecee64736f6c63430008140033a26469706673582212201b92e2aeadad13e172ff7f741a181f13a29429d11d3231a93c89895d55ef9f2364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checker()": {
        "details": "Part of the Gelato automation",
        "returns": {
          "canExec": "Boolean flag indicating if upkeep is needed.",
          "execPayload": "Encoded data on what action to perform during upkeep."
        }
      },
      "performUpkeep(address,bool,bool,uint256)": {
        "details": "Part of the gelato automation."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checker()": {
        "notice": "Checks if upkeep is needed based on TSL conditions.COMPUTED OFF-CHAIN"
      },
      "performUpkeep(address,bool,bool,uint256)": {
        "notice": "Performs the upkeep of updating the stop loss threshold or triggering a sell."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/TrailMixManager.sol:TrailMixManager",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1220,
        "contract": "contracts/TrailMixManager.sol:TrailMixManager",
        "label": "activeStrategies",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1224,
        "contract": "contracts/TrailMixManager.sol:TrailMixManager",
        "label": "strategyIndex",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1228,
        "contract": "contracts/TrailMixManager.sol:TrailMixManager",
        "label": "isActiveStrategy",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1233,
        "contract": "contracts/TrailMixManager.sol:TrailMixManager",
        "label": "userContracts",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}